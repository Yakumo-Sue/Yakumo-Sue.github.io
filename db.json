{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Blog-Logo/Hexo.png","path":"img/Blog-Logo/Hexo.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Post-Banner/01.blogs/1316853.jpeg","path":"img/Post-Banner/01.blogs/1316853.jpeg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/1316292.jpeg","path":"img/Post-Banner/00.defaults/1316292.jpeg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/1316737.jpeg","path":"img/Post-Banner/00.defaults/1316737.jpeg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/avatar.jpg","path":"img/Post-Banner/00.defaults/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/Learning.jpg","path":"img/Post-Banner/00.defaults/Learning.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/default.png","path":"img/Post-Banner/00.defaults/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/Blog-Logo/logo.png","path":"img/Blog-Logo/logo.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1690850878644},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1688287284000},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1688287284000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1688287284000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1688287284000},{"_id":"themes/fluid/.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1688287284000},{"_id":"themes/fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1688287284000},{"_id":"themes/fluid/README.md","hash":"49f681a203eecfa7127ac22edc13bd3b49693d0a","modified":1688287284000},{"_id":"themes/fluid/README_en.md","hash":"49541d4ec48c4b517c5b3fe17a2e92d87090d007","modified":1688287284000},{"_id":"themes/fluid/_config.yml","hash":"76a7c3041969df18370ecd42cc58f2ae61339ae1","modified":1690874627894},{"_id":"themes/fluid/package.json","hash":"41983970c0977b3c626c3f1e3c714cf78ac6a04e","modified":1688287284000},{"_id":"themes/fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1688287284000},{"_id":"themes/fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1688287284000},{"_id":"themes/fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1688287284000},{"_id":"themes/fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1688287284000},{"_id":"themes/fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1688287284000},{"_id":"themes/fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1688287284000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1688287284000},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1688287284000},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1688287284000},{"_id":"themes/fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1688287284000},{"_id":"themes/fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1688287284000},{"_id":"themes/fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1688287284000},{"_id":"themes/fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1688287284000},{"_id":"themes/fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1688287284000},{"_id":"themes/fluid/layout/index.ejs","hash":"9b4c154462ce78de4c9ea7dd15dce4ca8e8c1cf8","modified":1688287284000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1688287284000},{"_id":"themes/fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1688287284000},{"_id":"themes/fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1688287284000},{"_id":"themes/fluid/layout/post.ejs","hash":"75ab6958d929e92566ca580d0b8bd0eeae10649a","modified":1688287284000},{"_id":"themes/fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1688287284000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1688287284000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1688287284000},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1688287284000},{"_id":"themes/fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1688287284000},{"_id":"themes/fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1688287284000},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1688287284000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1688287284000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1688287284000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1688287284000},{"_id":"themes/fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1688287284000},{"_id":"themes/fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1688287284000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1688287284000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1688287284000},{"_id":"themes/fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1688287284000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1688287284000},{"_id":"themes/fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1688287284000},{"_id":"themes/fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1688287284000},{"_id":"themes/fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1688287284000},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1688287284000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"0047666f996c54017e06668b5242ed8a311ebce0","modified":1688287284000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1688287284000},{"_id":"themes/fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1688287284000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1688287284000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1688287284000},{"_id":"themes/fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1688287284000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1688287284000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1688287284000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"b2f61b91fffb17d11ad56811f07d52d23f012741","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"8d3ae1ec6660fbb0e563bc08c2f8deefde1f3bf6","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"e413212e5a667d5b8299c4d2a39c4dfa1378d119","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"ecf3488566b374d564ae985c61e08562ba908023","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1688287284000},{"_id":"themes/fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1688287284000},{"_id":"public/local-search.xml","hash":"1c6faa4fa05c67896334b705a3c02b8e2d8fea24","modified":1690851286626},{"_id":"public/archives/index.html","hash":"13a6a48ded70f8ea6a49b29801185d8514dd2acd","modified":1690851286626},{"_id":"public/index.html","hash":"0ad4e2dc2eadbf1c83c748259c13f182571e30a7","modified":1690851286626},{"_id":"public/archives/2023/index.html","hash":"60f29358d5a7cb1b9ac52bb490a7fb9ce4f87b82","modified":1690851286626},{"_id":"public/404.html","hash":"2fe861cf2ebd4826dd4e3cf667b6f3cfbb0b968c","modified":1690851286626},{"_id":"public/archives/2023/08/index.html","hash":"8798efeeea0bc380234b2a5ab51a326861ab8682","modified":1690851286626},{"_id":"public/tags/index.html","hash":"c19cd5597ce64d4c75ac505c75ef5d25d9da409f","modified":1690851286626},{"_id":"public/links/index.html","hash":"3d560f00d7ad46ee5863ea2500329eb41b6fd658","modified":1690851286626},{"_id":"public/categories/index.html","hash":"3493f14380a92ef9a3404b97ccebf6ae4213a328","modified":1690851286626},{"_id":"public/2023/08/01/hello-world/index.html","hash":"47b0ef8dc5f9299a8f22edf0877c5889803b4b1c","modified":1690851286626},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1690851286626},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1690851286626},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1690851286626},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1690851286626},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1690851286626},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1690851286626},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1690851286626},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1690851286626},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1690851286626},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1690851286626},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1690851286626},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1690851286626},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1690851286626},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1690851286626},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1690851286626},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1690851286626},{"_id":"public/css/main.css","hash":"526a4522eb54bb51772f51fb98295dc4fe03429f","modified":1690851286626},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1690851286626},{"_id":"source/_posts/博客部署流程.md","hash":"da5d0815dbed06bc293fc0b82bb3c8bd74fcfb31","modified":1690874487889},{"_id":"source/about/index.md","hash":"d888b83f6199e9d433b6927168467e2e8a07c132","modified":1690858130957},{"_id":"themes/fluid/source/img/avatar.jpg","hash":"97e288f919a03fb541e90c450c2ccd1cccdfc9c7","modified":1690855393532},{"_id":"themes/fluid/source/img/logo.png","hash":"1dfbe7ba9fbd39ba5eba6c409fa2981133981b26","modified":1690855369221},{"_id":"themes/fluid/source/img/Learning.jpg","hash":"c8176480228876fb4ad2e356db3ab843daba3d1b","modified":1690855379530},{"_id":"themes/fluid/source/img/1316292.jpeg","hash":"c578f56ee5c408ca8102d5fd7e38ba5a3f195b53","modified":1687736865433},{"_id":"themes/fluid/source/img/1316737.jpeg","hash":"150ffd7286023d7b953553d3bd0a81197cd47e37","modified":1687737426919},{"_id":"themes/fluid/source/img/Blog-Logo/Hexo.png","hash":"c96a69c6e3a14bf85887052e5925225a051e5fd9","modified":1690871880925},{"_id":"themes/fluid/source/img/Blog-Logo/logo.png","hash":"1dfbe7ba9fbd39ba5eba6c409fa2981133981b26","modified":1690855369221},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/avatar.jpg","hash":"97e288f919a03fb541e90c450c2ccd1cccdfc9c7","modified":1690855393532},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1688287284000},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/Learning.jpg","hash":"c8176480228876fb4ad2e356db3ab843daba3d1b","modified":1690855379530},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/1316292.jpeg","hash":"c578f56ee5c408ca8102d5fd7e38ba5a3f195b53","modified":1687736865433},{"_id":"themes/fluid/source/img/Post-Banner/01.blogs/1316853.jpeg","hash":"9016ce7a4acef621762a2d33e059d28f24a9ef91","modified":1690872039819},{"_id":"themes/fluid/source/img/Post-Banner/00.defaults/1316737.jpeg","hash":"150ffd7286023d7b953553d3bd0a81197cd47e37","modified":1687737426919}],"Category":[],"Data":[],"Page":[{"layout":"about","date":"2023-08-01T02:29:36.000Z","_content":"\nFluid ，这是一款 Material Design 风格的 Hexo 主题，以简约的设计帮助你专注于写作。\n\n该主题相较于其他主题的优势：\n\n- 设计遵循简洁至上，同时具有轻快的体验，和优雅的颜值；\n- 提供大量定制化配置项，使每个用户使用该主题都能具有独特的样式；\n- 响应式页面，适配手机、平板等设备；\n- 转载文章；\n\n## 个人技能\n\n- Html + Css + JavaScript + NodeJS + MySQL + React\n- C/C++ + UE\n- 数据结构与算法 + 计算机网络 + 计算机组成原理 + 操作系统\n\n## 项目组\n\n......","source":"about/index.md","raw":"---\nlayout: about\ndate: 2023-08-01 10:29:36\n---\n\nFluid ，这是一款 Material Design 风格的 Hexo 主题，以简约的设计帮助你专注于写作。\n\n该主题相较于其他主题的优势：\n\n- 设计遵循简洁至上，同时具有轻快的体验，和优雅的颜值；\n- 提供大量定制化配置项，使每个用户使用该主题都能具有独特的样式；\n- 响应式页面，适配手机、平板等设备；\n- 转载文章；\n\n## 个人技能\n\n- Html + Css + JavaScript + NodeJS + MySQL + React\n- C/C++ + UE\n- 数据结构与算法 + 计算机网络 + 计算机组成原理 + 操作系统\n\n## 项目组\n\n......","updated":"2023-08-01T02:48:50.957Z","path":"about/index.html","_id":"clkrobmbc0000u0pk12zga84x","title":"","comments":1,"content":"<p>Fluid ，这是一款 Material Design 风格的 Hexo 主题，以简约的设计帮助你专注于写作。</p>\n<p>该主题相较于其他主题的优势：</p>\n<ul>\n<li>设计遵循简洁至上，同时具有轻快的体验，和优雅的颜值；</li>\n<li>提供大量定制化配置项，使每个用户使用该主题都能具有独特的样式；</li>\n<li>响应式页面，适配手机、平板等设备；</li>\n<li>转载文章；</li>\n</ul>\n<h2 id=\"个人技能\"><a href=\"#个人技能\" class=\"headerlink\" title=\"个人技能\"></a>个人技能</h2><ul>\n<li>Html + Css + JavaScript + NodeJS + MySQL + React</li>\n<li>C&#x2F;C++ + UE</li>\n<li>数据结构与算法 + 计算机网络 + 计算机组成原理 + 操作系统</li>\n</ul>\n<h2 id=\"项目组\"><a href=\"#项目组\" class=\"headerlink\" title=\"项目组\"></a>项目组</h2><p>……</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Fluid ，这是一款 Material Design 风格的 Hexo 主题，以简约的设计帮助你专注于写作。</p>\n<p>该主题相较于其他主题的优势：</p>\n<ul>\n<li>设计遵循简洁至上，同时具有轻快的体验，和优雅的颜值；</li>\n<li>提供大量定制化配置项，使每个用户使用该主题都能具有独特的样式；</li>\n<li>响应式页面，适配手机、平板等设备；</li>\n<li>转载文章；</li>\n</ul>\n<h2 id=\"个人技能\"><a href=\"#个人技能\" class=\"headerlink\" title=\"个人技能\"></a>个人技能</h2><ul>\n<li>Html + Css + JavaScript + NodeJS + MySQL + React</li>\n<li>C&#x2F;C++ + UE</li>\n<li>数据结构与算法 + 计算机网络 + 计算机组成原理 + 操作系统</li>\n</ul>\n<h2 id=\"项目组\"><a href=\"#项目组\" class=\"headerlink\" title=\"项目组\"></a>项目组</h2><p>……</p>\n"}],"Post":[{"title":"博客部署流程","index_img":"/img/Blog-Logo/Hexo.png","banner_img":"/img/Post-Banner/01.blogs/1316853.jpeg","_content":"\n**主要使用技术合集：**\n\n1. Hexo 博客系统\n2. Fluid 博客模板\n3. Obsidian + Github Pages 部署。\n\n## 1. Hexo 博客系统\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 **Markdown**（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n### 1.1 安装需求\n\n安装 Hexo 相当简单，只需要先安装下列应用程序即可：\n\n- Node.js （Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本）\n- Git\n\n### 1.2 安装 Hexo\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n~~~cmd\nnpm install -g hexo-cli\n~~~\n\n全局安装后即可随时使用\n\n### 1.3 创建博客\n\n安装完成后，就可以在终端使用 `hexo` 指令了，可以使用以下指令创建一个 hexo 项目：\n\n~~~cmd\nhexo init hexo-blog  \ncd hexo-blog  \nyarn install\n~~~\n\n完成后项目目录如下：\n\n~~~plaintext\n.  \n├── _config.yml # 网站的基础配置，文档：https://hexo.io/zh-cn/docs/configuration  \n├── package.json  \n├── scaffolds # 文章模板  \n├── source  \n|   ├── _drafts  \n|   └── _posts # 你的 markdown 文章就需要存放在此目录下  \n└── themes # 存放主题源码\n~~~\n\n## 2. 配置 Fluid 主题\n\n1. NPM 安装\n2. 源码安装\n\n### 2.1 NPM 安装\n\n以 [hexo-theme-fluid](https://github.com/fluid-dev/hexo-theme-fluid) 主题为例，使用 npm 安装只需要执行：\n\n~~~cmd\nyarn add hexo-theme-fluid  \n# 或者  \nnpm install --save hexo-theme-fluid\n~~~\n\n然后在博客目录下创建 `_config.fluid.yml`，将主题的 `_config.yml` 内容复制进去。\n\n### 2.2 源码安装\n\n源码安装是老版本 Hexo 安装主题的方式，如果你项修改主题的源码也可以很方便的直接修改。\n\n仍然以 [hexo-theme-fluid](https://github.com/fluid-dev/hexo-theme-fluid) 主题为例，在项目的 [Releases](https://github.com/fluid-dev/hexo-theme-fluid/releases) 页面中下载源码文件：\n\n![](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011507960.png)\n\n下载解压后，在 `themes` 目录下创建一个 `fluid` 目录，将源码复制到该目录下，如下：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011509213.png)\n\n### 2.3 应用主题\n\n当你安装成功后，需要在 `_config.yml` 中将使用的主题设置为你下载好的主题，找到 `theme` 配置项，将其修改为：\n\n~~~yml\n# Extensions  \n## Plugins: https://hexo.io/plugins/  \n## Themes: https://hexo.io/themes/  \ntheme: fluid\n~~~\n\n### 2.4 配置第三方主题\n\n如果你是以 npm 方式安装主题，你需要修改你刚才在博客目录下创建 `_config.fluid.yml` 文件修改相关配置；\n\n如果你是以源码方式安装的主题，就不需要创建 `_config.fluid.yml` 文件了，只需要修改 `/themes/fluid/_config.yml` 文件中的配置就可以了。\n\n> 注意：每个主题的配置文件名称都不一样，主题的配置项也不一样，具体需要自行查看你安装主题的说明文档\n\n## 3. 部署 Github Pages\n\n然后在 Github 中创建一个新项目仓库，名称必须为 `<你的github用户名>.github.io`，创建完成后按照指引将你的博客代码上传到 github。\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011512358.png)\n\n### 3.1 开启 Github Pages\n\n在执行这一步之前，先创建一个没有任何代码的新分支，命名为 `gh-pages`：\n\n~~~git\ngit checkout -b gh-pages  \nrm -f * # 确定你的当前目录没问题，把握不住删除指令的话就手动删除当前文件加的内容  \ngit push --set-upstream origin release # 上传 release 分支\n~~~\n\n在项目的设置中找到 Github Pages，并将展示分支设置为刚才创建的 `gh-pages` 分支：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011513779.png)\n\n这就意为这你在 `gh-pages` 上传的任何 html 都可以使用 `<你的github用户名>.github.io` 这个域名来访问了。\n\n我们切回 `master` 分支，之后执行 `yarn build` 将生成的 `public` 目录下的文件复制一份，然后重新切回 `gh-pages` 分支，将刚才复制的内容粘贴到 `gh-pages` 分支下，并上传代码。如果没有操作失误的话，访问 `<你的github用户名>.github.io` 即可看到你的博客了。\n\n### 3.2 Github Action 自动部署\n\n使用 Github Action 来帮我们做自动化部署。\n\nGithub Action 可以实现在一个行为触发之后再执行一些其他的行为，利用这个能力我们就可以实现当我们写完一篇文章后，将代码 Push 到 Github 仓库的这一刻，让 Github 来帮我们完成编译以及部署这个流程，也就是实现持续集成（CI）、持续交付（CD）的这个效果。\n\n关于 Github Action，详细教程可以查看 [官方文档](https://docs.github.com/cn/actions)。按照文档中所描述的，只要我们在代码中添加一层 `.github/workflows` 目录，并且在目录下创建一个 `yml` 文件来描述具体的行为，就可以实现开启 Github Action。\n\n如下是一个编写好的部署 hexo 博客的 yml 文件，你可以将其写入到 `.github/workflows/blog-deploy.yml` 文件中：\n\n~~~yml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  pages:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Use Node.js 16.x\n        uses: actions/setup-node@v2\n        with:\n          node-version: \"16\"\n\n      - name: Cache NPM dependencies\n        uses: actions/cache@v2\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n\n      - name: Install Dependencies\n        run: npm install\n\n      - name: Build\n        run: npm run build\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.ACCESS_TOKEN }}\n          publish_dir: ./public\n~~~\n\n保存后提交代码后，就可以在你的博客的 Github 项目仓库里的 Actions 标签页里找到创建好的 workflow 了，并且当你 push 代码时，这个工作流就会被触发：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011517404.png)\n\n\n但其实它最终会失败的，因为我们还有一步没有完成。在上面的脚本中使用了一个 Github Action 的 [secrets 上下文](https://docs.github.com/cn/actions/learn-github-actions/contexts#secrets-context)，即 `${{ secrets.ACCESS_TOKEN }}` 这里。\n\n`${{ xxx }}` 是 Github Action 中的特定模板语法，可以获取到一些 Github 相关的内置的系统变量（姑且这么说吧），但又区区别与 Github Action 的环境变量。我们这里获取的 `secrets.ACCESS_TOKEN` 是 Github Personal access token，获取这个 token 的目的是为了让当前的 Github Action 工作流有向我们的项目推送代码的权限。\n\n首先我们要获取这个 Token，你可以在你的用户头像菜单里选择 `Setting`，进入设置后选择 `Developer settings`，再选择 `Persona access token` 就可以看到它了：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518709.png)\n\n点击右上角的 `Generate new token` 按钮生成新的 Token，填写一个你比较容易区分的备注后，勾选 `repo` 和 `workflow` 权限，并将 `Expiration` 过期时间选为 `No expiration`：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518481.png)\n\n> 这个 Token 相当重要，千万不能泄露，如过泄露立刻重置该 token ！！！\n\n点击 `Generate token` 按钮后，就会生成一个 `ghp` 开头的 token，你需要在此复制该 token（后面不能再查看了，只能重新生成）:\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518736.png)\n\n复制该 token 后，进入到博客仓库的设置中，选择 `Secrets - Actions`，点击 `New repository secret` 按钮生成一个密钥信息：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011519065.png)\n\n我们将密钥名称写为 `ACCESS_TOKEN`，值填入刚才复制的 Github token。\n\n> 这里所新建的 secret 字段，就可以被 Github Action yml 配置中的 `secret` 上下文对象所获取到。\n\n至此 Github Action 工作流就可以正常使用了，你可以愉快的开始写你的博客啦，你的每次提交 Github Action 都会帮你进行自动部署。","source":"_posts/博客部署流程.md","raw":"---\ntitle: 博客部署流程\ntags: [Blog, Hexo, Fluid, Obdidian, Github Pages]\nindex_img: /img/Blog-Logo/Hexo.png\nbanner_img: /img/Post-Banner/01.blogs/1316853.jpeg\n---\n\n**主要使用技术合集：**\n\n1. Hexo 博客系统\n2. Fluid 博客模板\n3. Obsidian + Github Pages 部署。\n\n## 1. Hexo 博客系统\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 **Markdown**（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n\n### 1.1 安装需求\n\n安装 Hexo 相当简单，只需要先安装下列应用程序即可：\n\n- Node.js （Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本）\n- Git\n\n### 1.2 安装 Hexo\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n~~~cmd\nnpm install -g hexo-cli\n~~~\n\n全局安装后即可随时使用\n\n### 1.3 创建博客\n\n安装完成后，就可以在终端使用 `hexo` 指令了，可以使用以下指令创建一个 hexo 项目：\n\n~~~cmd\nhexo init hexo-blog  \ncd hexo-blog  \nyarn install\n~~~\n\n完成后项目目录如下：\n\n~~~plaintext\n.  \n├── _config.yml # 网站的基础配置，文档：https://hexo.io/zh-cn/docs/configuration  \n├── package.json  \n├── scaffolds # 文章模板  \n├── source  \n|   ├── _drafts  \n|   └── _posts # 你的 markdown 文章就需要存放在此目录下  \n└── themes # 存放主题源码\n~~~\n\n## 2. 配置 Fluid 主题\n\n1. NPM 安装\n2. 源码安装\n\n### 2.1 NPM 安装\n\n以 [hexo-theme-fluid](https://github.com/fluid-dev/hexo-theme-fluid) 主题为例，使用 npm 安装只需要执行：\n\n~~~cmd\nyarn add hexo-theme-fluid  \n# 或者  \nnpm install --save hexo-theme-fluid\n~~~\n\n然后在博客目录下创建 `_config.fluid.yml`，将主题的 `_config.yml` 内容复制进去。\n\n### 2.2 源码安装\n\n源码安装是老版本 Hexo 安装主题的方式，如果你项修改主题的源码也可以很方便的直接修改。\n\n仍然以 [hexo-theme-fluid](https://github.com/fluid-dev/hexo-theme-fluid) 主题为例，在项目的 [Releases](https://github.com/fluid-dev/hexo-theme-fluid/releases) 页面中下载源码文件：\n\n![](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011507960.png)\n\n下载解压后，在 `themes` 目录下创建一个 `fluid` 目录，将源码复制到该目录下，如下：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011509213.png)\n\n### 2.3 应用主题\n\n当你安装成功后，需要在 `_config.yml` 中将使用的主题设置为你下载好的主题，找到 `theme` 配置项，将其修改为：\n\n~~~yml\n# Extensions  \n## Plugins: https://hexo.io/plugins/  \n## Themes: https://hexo.io/themes/  \ntheme: fluid\n~~~\n\n### 2.4 配置第三方主题\n\n如果你是以 npm 方式安装主题，你需要修改你刚才在博客目录下创建 `_config.fluid.yml` 文件修改相关配置；\n\n如果你是以源码方式安装的主题，就不需要创建 `_config.fluid.yml` 文件了，只需要修改 `/themes/fluid/_config.yml` 文件中的配置就可以了。\n\n> 注意：每个主题的配置文件名称都不一样，主题的配置项也不一样，具体需要自行查看你安装主题的说明文档\n\n## 3. 部署 Github Pages\n\n然后在 Github 中创建一个新项目仓库，名称必须为 `<你的github用户名>.github.io`，创建完成后按照指引将你的博客代码上传到 github。\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011512358.png)\n\n### 3.1 开启 Github Pages\n\n在执行这一步之前，先创建一个没有任何代码的新分支，命名为 `gh-pages`：\n\n~~~git\ngit checkout -b gh-pages  \nrm -f * # 确定你的当前目录没问题，把握不住删除指令的话就手动删除当前文件加的内容  \ngit push --set-upstream origin release # 上传 release 分支\n~~~\n\n在项目的设置中找到 Github Pages，并将展示分支设置为刚才创建的 `gh-pages` 分支：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011513779.png)\n\n这就意为这你在 `gh-pages` 上传的任何 html 都可以使用 `<你的github用户名>.github.io` 这个域名来访问了。\n\n我们切回 `master` 分支，之后执行 `yarn build` 将生成的 `public` 目录下的文件复制一份，然后重新切回 `gh-pages` 分支，将刚才复制的内容粘贴到 `gh-pages` 分支下，并上传代码。如果没有操作失误的话，访问 `<你的github用户名>.github.io` 即可看到你的博客了。\n\n### 3.2 Github Action 自动部署\n\n使用 Github Action 来帮我们做自动化部署。\n\nGithub Action 可以实现在一个行为触发之后再执行一些其他的行为，利用这个能力我们就可以实现当我们写完一篇文章后，将代码 Push 到 Github 仓库的这一刻，让 Github 来帮我们完成编译以及部署这个流程，也就是实现持续集成（CI）、持续交付（CD）的这个效果。\n\n关于 Github Action，详细教程可以查看 [官方文档](https://docs.github.com/cn/actions)。按照文档中所描述的，只要我们在代码中添加一层 `.github/workflows` 目录，并且在目录下创建一个 `yml` 文件来描述具体的行为，就可以实现开启 Github Action。\n\n如下是一个编写好的部署 hexo 博客的 yml 文件，你可以将其写入到 `.github/workflows/blog-deploy.yml` 文件中：\n\n~~~yml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main # default branch\n\njobs:\n  pages:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n\n\n    steps:\n      - uses: actions/checkout@v2\n      - name: Use Node.js 16.x\n        uses: actions/setup-node@v2\n        with:\n          node-version: \"16\"\n\n      - name: Cache NPM dependencies\n        uses: actions/cache@v2\n        with:\n          path: node_modules\n          key: ${{ runner.OS }}-npm-cache\n          restore-keys: |\n            ${{ runner.OS }}-npm-cache\n\n      - name: Install Dependencies\n        run: npm install\n\n      - name: Build\n        run: npm run build\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.ACCESS_TOKEN }}\n          publish_dir: ./public\n~~~\n\n保存后提交代码后，就可以在你的博客的 Github 项目仓库里的 Actions 标签页里找到创建好的 workflow 了，并且当你 push 代码时，这个工作流就会被触发：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011517404.png)\n\n\n但其实它最终会失败的，因为我们还有一步没有完成。在上面的脚本中使用了一个 Github Action 的 [secrets 上下文](https://docs.github.com/cn/actions/learn-github-actions/contexts#secrets-context)，即 `${{ secrets.ACCESS_TOKEN }}` 这里。\n\n`${{ xxx }}` 是 Github Action 中的特定模板语法，可以获取到一些 Github 相关的内置的系统变量（姑且这么说吧），但又区区别与 Github Action 的环境变量。我们这里获取的 `secrets.ACCESS_TOKEN` 是 Github Personal access token，获取这个 token 的目的是为了让当前的 Github Action 工作流有向我们的项目推送代码的权限。\n\n首先我们要获取这个 Token，你可以在你的用户头像菜单里选择 `Setting`，进入设置后选择 `Developer settings`，再选择 `Persona access token` 就可以看到它了：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518709.png)\n\n点击右上角的 `Generate new token` 按钮生成新的 Token，填写一个你比较容易区分的备注后，勾选 `repo` 和 `workflow` 权限，并将 `Expiration` 过期时间选为 `No expiration`：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518481.png)\n\n> 这个 Token 相当重要，千万不能泄露，如过泄露立刻重置该 token ！！！\n\n点击 `Generate token` 按钮后，就会生成一个 `ghp` 开头的 token，你需要在此复制该 token（后面不能再查看了，只能重新生成）:\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518736.png)\n\n复制该 token 后，进入到博客仓库的设置中，选择 `Secrets - Actions`，点击 `New repository secret` 按钮生成一个密钥信息：\n\n![image.png](https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011519065.png)\n\n我们将密钥名称写为 `ACCESS_TOKEN`，值填入刚才复制的 Github token。\n\n> 这里所新建的 secret 字段，就可以被 Github Action yml 配置中的 `secret` 上下文对象所获取到。\n\n至此 Github Action 工作流就可以正常使用了，你可以愉快的开始写你的博客啦，你的每次提交 Github Action 都会帮你进行自动部署。","slug":"博客部署流程","published":1,"date":"2023-08-01T00:47:58.644Z","updated":"2023-08-01T07:32:36.376Z","_id":"clkrobmbf0001u0pkc6e72u5t","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>主要使用技术合集：</strong></p>\n<ol>\n<li>Hexo 博客系统</li>\n<li>Fluid 博客模板</li>\n<li>Obsidian + Github Pages 部署。</li>\n</ol>\n<h2 id=\"1-Hexo-博客系统\"><a href=\"#1-Hexo-博客系统\" class=\"headerlink\" title=\"1. Hexo 博客系统\"></a>1. Hexo 博客系统</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <strong>Markdown</strong>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<h3 id=\"1-1-安装需求\"><a href=\"#1-1-安装需求\" class=\"headerlink\" title=\"1.1 安装需求\"></a>1.1 安装需求</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>\n<ul>\n<li>Node.js （Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本）</li>\n<li>Git</li>\n</ul>\n<h3 id=\"1-2-安装-Hexo\"><a href=\"#1-2-安装-Hexo\" class=\"headerlink\" title=\"1.2 安装 Hexo\"></a>1.2 安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n\n<p>全局安装后即可随时使用</p>\n<h3 id=\"1-3-创建博客\"><a href=\"#1-3-创建博客\" class=\"headerlink\" title=\"1.3 创建博客\"></a>1.3 创建博客</h3><p>安装完成后，就可以在终端使用 <code>hexo</code> 指令了，可以使用以下指令创建一个 hexo 项目：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">hexo init hexo-blog  <br><span class=\"hljs-built_in\">cd</span> hexo-blog  <br>yarn install<br></code></pre></td></tr></table></figure>\n\n<p>完成后项目目录如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">.  <br>├── _config.yml # 网站的基础配置，文档：https://hexo.io/zh-cn/docs/configuration  <br>├── package.json  <br>├── scaffolds # 文章模板  <br>├── source  <br>|   ├── _drafts  <br>|   └── _posts # 你的 markdown 文章就需要存放在此目录下  <br>└── themes # 存放主题源码<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-配置-Fluid-主题\"><a href=\"#2-配置-Fluid-主题\" class=\"headerlink\" title=\"2. 配置 Fluid 主题\"></a>2. 配置 Fluid 主题</h2><ol>\n<li>NPM 安装</li>\n<li>源码安装</li>\n</ol>\n<h3 id=\"2-1-NPM-安装\"><a href=\"#2-1-NPM-安装\" class=\"headerlink\" title=\"2.1 NPM 安装\"></a>2.1 NPM 安装</h3><p>以 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">hexo-theme-fluid</a> 主题为例，使用 npm 安装只需要执行：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">yarn add hexo-theme-fluid  <br># 或者  <br>npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure>\n\n<p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <code>_config.yml</code> 内容复制进去。</p>\n<h3 id=\"2-2-源码安装\"><a href=\"#2-2-源码安装\" class=\"headerlink\" title=\"2.2 源码安装\"></a>2.2 源码安装</h3><p>源码安装是老版本 Hexo 安装主题的方式，如果你项修改主题的源码也可以很方便的直接修改。</p>\n<p>仍然以 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">hexo-theme-fluid</a> 主题为例，在项目的 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid/releases\">Releases</a> 页面中下载源码文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011507960.png\"></p>\n<p>下载解压后，在 <code>themes</code> 目录下创建一个 <code>fluid</code> 目录，将源码复制到该目录下，如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011509213.png\" alt=\"image.png\"></p>\n<h3 id=\"2-3-应用主题\"><a href=\"#2-3-应用主题\" class=\"headerlink\" title=\"2.3 应用主题\"></a>2.3 应用主题</h3><p>当你安装成功后，需要在 <code>_config.yml</code> 中将使用的主题设置为你下载好的主题，找到 <code>theme</code> 配置项，将其修改为：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Extensions  </span><br><span class=\"hljs-comment\">## Plugins: https://hexo.io/plugins/  </span><br><span class=\"hljs-comment\">## Themes: https://hexo.io/themes/  </span><br><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">fluid</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-配置第三方主题\"><a href=\"#2-4-配置第三方主题\" class=\"headerlink\" title=\"2.4 配置第三方主题\"></a>2.4 配置第三方主题</h3><p>如果你是以 npm 方式安装主题，你需要修改你刚才在博客目录下创建 <code>_config.fluid.yml</code> 文件修改相关配置；</p>\n<p>如果你是以源码方式安装的主题，就不需要创建 <code>_config.fluid.yml</code> 文件了，只需要修改 <code>/themes/fluid/_config.yml</code> 文件中的配置就可以了。</p>\n<blockquote>\n<p>注意：每个主题的配置文件名称都不一样，主题的配置项也不一样，具体需要自行查看你安装主题的说明文档</p>\n</blockquote>\n<h2 id=\"3-部署-Github-Pages\"><a href=\"#3-部署-Github-Pages\" class=\"headerlink\" title=\"3. 部署 Github Pages\"></a>3. 部署 Github Pages</h2><p>然后在 Github 中创建一个新项目仓库，名称必须为 <code>&lt;你的github用户名&gt;.github.io</code>，创建完成后按照指引将你的博客代码上传到 github。</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011512358.png\" alt=\"image.png\"></p>\n<h3 id=\"3-1-开启-Github-Pages\"><a href=\"#3-1-开启-Github-Pages\" class=\"headerlink\" title=\"3.1 开启 Github Pages\"></a>3.1 开启 Github Pages</h3><p>在执行这一步之前，先创建一个没有任何代码的新分支，命名为 <code>gh-pages</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs git\">git checkout -b gh-pages  <br>rm -f * # 确定你的当前目录没问题，把握不住删除指令的话就手动删除当前文件加的内容  <br>git push --set-upstream origin release # 上传 release 分支<br></code></pre></td></tr></table></figure>\n\n<p>在项目的设置中找到 Github Pages，并将展示分支设置为刚才创建的 <code>gh-pages</code> 分支：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011513779.png\" alt=\"image.png\"></p>\n<p>这就意为这你在 <code>gh-pages</code> 上传的任何 html 都可以使用 <code>&lt;你的github用户名&gt;.github.io</code> 这个域名来访问了。</p>\n<p>我们切回 <code>master</code> 分支，之后执行 <code>yarn build</code> 将生成的 <code>public</code> 目录下的文件复制一份，然后重新切回 <code>gh-pages</code> 分支，将刚才复制的内容粘贴到 <code>gh-pages</code> 分支下，并上传代码。如果没有操作失误的话，访问 <code>&lt;你的github用户名&gt;.github.io</code> 即可看到你的博客了。</p>\n<h3 id=\"3-2-Github-Action-自动部署\"><a href=\"#3-2-Github-Action-自动部署\" class=\"headerlink\" title=\"3.2 Github Action 自动部署\"></a>3.2 Github Action 自动部署</h3><p>使用 Github Action 来帮我们做自动化部署。</p>\n<p>Github Action 可以实现在一个行为触发之后再执行一些其他的行为，利用这个能力我们就可以实现当我们写完一篇文章后，将代码 Push 到 Github 仓库的这一刻，让 Github 来帮我们完成编译以及部署这个流程，也就是实现持续集成（CI）、持续交付（CD）的这个效果。</p>\n<p>关于 Github Action，详细教程可以查看 <a href=\"https://docs.github.com/cn/actions\">官方文档</a>。按照文档中所描述的，只要我们在代码中添加一层 <code>.github/workflows</code> 目录，并且在目录下创建一个 <code>yml</code> 文件来描述具体的行为，就可以实现开启 Github Action。</p>\n<p>如下是一个编写好的部署 hexo 博客的 yml 文件，你可以将其写入到 <code>.github/workflows/blog-deploy.yml</code> 文件中：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">GitHub</span> <span class=\"hljs-string\">Pages</span><br><br><span class=\"hljs-attr\">on:</span><br>  <span class=\"hljs-attr\">push:</span><br>    <span class=\"hljs-attr\">branches:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">main</span> <span class=\"hljs-comment\"># default branch</span><br><br><span class=\"hljs-attr\">jobs:</span><br>  <span class=\"hljs-attr\">pages:</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">permissions:</span><br>      <span class=\"hljs-attr\">contents:</span> <span class=\"hljs-string\">write</span><br><br><br>    <span class=\"hljs-attr\">steps:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v2</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span> <span class=\"hljs-number\">16.</span><span class=\"hljs-string\">x</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v2</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">&quot;16&quot;</span><br><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Cache</span> <span class=\"hljs-string\">NPM</span> <span class=\"hljs-string\">dependencies</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/cache@v2</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">node_modules</span><br>          <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">runner.OS</span> <span class=\"hljs-string\">&#125;&#125;-npm-cache</span><br>          <span class=\"hljs-attr\">restore-keys:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"hljs-string\"></span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">Dependencies</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span><br><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">peaceiris/actions-gh-pages@v3</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">github_token:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">secrets.ACCESS_TOKEN</span> <span class=\"hljs-string\">&#125;&#125;</span><br>          <span class=\"hljs-attr\">publish_dir:</span> <span class=\"hljs-string\">./public</span><br></code></pre></td></tr></table></figure>\n\n<p>保存后提交代码后，就可以在你的博客的 Github 项目仓库里的 Actions 标签页里找到创建好的 workflow 了，并且当你 push 代码时，这个工作流就会被触发：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011517404.png\" alt=\"image.png\"></p>\n<p>但其实它最终会失败的，因为我们还有一步没有完成。在上面的脚本中使用了一个 Github Action 的 <a href=\"https://docs.github.com/cn/actions/learn-github-actions/contexts#secrets-context\">secrets 上下文</a>，即 <code>$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;</code> 这里。</p>\n<p><code>$&#123;&#123; xxx &#125;&#125;</code> 是 Github Action 中的特定模板语法，可以获取到一些 Github 相关的内置的系统变量（姑且这么说吧），但又区区别与 Github Action 的环境变量。我们这里获取的 <code>secrets.ACCESS_TOKEN</code> 是 Github Personal access token，获取这个 token 的目的是为了让当前的 Github Action 工作流有向我们的项目推送代码的权限。</p>\n<p>首先我们要获取这个 Token，你可以在你的用户头像菜单里选择 <code>Setting</code>，进入设置后选择 <code>Developer settings</code>，再选择 <code>Persona access token</code> 就可以看到它了：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518709.png\" alt=\"image.png\"></p>\n<p>点击右上角的 <code>Generate new token</code> 按钮生成新的 Token，填写一个你比较容易区分的备注后，勾选 <code>repo</code> 和 <code>workflow</code> 权限，并将 <code>Expiration</code> 过期时间选为 <code>No expiration</code>：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518481.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>这个 Token 相当重要，千万不能泄露，如过泄露立刻重置该 token ！！！</p>\n</blockquote>\n<p>点击 <code>Generate token</code> 按钮后，就会生成一个 <code>ghp</code> 开头的 token，你需要在此复制该 token（后面不能再查看了，只能重新生成）:</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518736.png\" alt=\"image.png\"></p>\n<p>复制该 token 后，进入到博客仓库的设置中，选择 <code>Secrets - Actions</code>，点击 <code>New repository secret</code> 按钮生成一个密钥信息：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011519065.png\" alt=\"image.png\"></p>\n<p>我们将密钥名称写为 <code>ACCESS_TOKEN</code>，值填入刚才复制的 Github token。</p>\n<blockquote>\n<p>这里所新建的 secret 字段，就可以被 Github Action yml 配置中的 <code>secret</code> 上下文对象所获取到。</p>\n</blockquote>\n<p>至此 Github Action 工作流就可以正常使用了，你可以愉快的开始写你的博客啦，你的每次提交 Github Action 都会帮你进行自动部署。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>主要使用技术合集：</strong></p>\n<ol>\n<li>Hexo 博客系统</li>\n<li>Fluid 博客模板</li>\n<li>Obsidian + Github Pages 部署。</li>\n</ol>\n<h2 id=\"1-Hexo-博客系统\"><a href=\"#1-Hexo-博客系统\" class=\"headerlink\" title=\"1. Hexo 博客系统\"></a>1. Hexo 博客系统</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <strong>Markdown</strong>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>\n<h3 id=\"1-1-安装需求\"><a href=\"#1-1-安装需求\" class=\"headerlink\" title=\"1.1 安装需求\"></a>1.1 安装需求</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>\n<ul>\n<li>Node.js （Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本）</li>\n<li>Git</li>\n</ul>\n<h3 id=\"1-2-安装-Hexo\"><a href=\"#1-2-安装-Hexo\" class=\"headerlink\" title=\"1.2 安装 Hexo\"></a>1.2 安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n\n<p>全局安装后即可随时使用</p>\n<h3 id=\"1-3-创建博客\"><a href=\"#1-3-创建博客\" class=\"headerlink\" title=\"1.3 创建博客\"></a>1.3 创建博客</h3><p>安装完成后，就可以在终端使用 <code>hexo</code> 指令了，可以使用以下指令创建一个 hexo 项目：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">hexo init hexo-blog  <br><span class=\"hljs-built_in\">cd</span> hexo-blog  <br>yarn install<br></code></pre></td></tr></table></figure>\n\n<p>完成后项目目录如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs plaintext\">.  <br>├── _config.yml # 网站的基础配置，文档：https://hexo.io/zh-cn/docs/configuration  <br>├── package.json  <br>├── scaffolds # 文章模板  <br>├── source  <br>|   ├── _drafts  <br>|   └── _posts # 你的 markdown 文章就需要存放在此目录下  <br>└── themes # 存放主题源码<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"2-配置-Fluid-主题\"><a href=\"#2-配置-Fluid-主题\" class=\"headerlink\" title=\"2. 配置 Fluid 主题\"></a>2. 配置 Fluid 主题</h2><ol>\n<li>NPM 安装</li>\n<li>源码安装</li>\n</ol>\n<h3 id=\"2-1-NPM-安装\"><a href=\"#2-1-NPM-安装\" class=\"headerlink\" title=\"2.1 NPM 安装\"></a>2.1 NPM 安装</h3><p>以 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">hexo-theme-fluid</a> 主题为例，使用 npm 安装只需要执行：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">yarn add hexo-theme-fluid  <br># 或者  <br>npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure>\n\n<p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <code>_config.yml</code> 内容复制进去。</p>\n<h3 id=\"2-2-源码安装\"><a href=\"#2-2-源码安装\" class=\"headerlink\" title=\"2.2 源码安装\"></a>2.2 源码安装</h3><p>源码安装是老版本 Hexo 安装主题的方式，如果你项修改主题的源码也可以很方便的直接修改。</p>\n<p>仍然以 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">hexo-theme-fluid</a> 主题为例，在项目的 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid/releases\">Releases</a> 页面中下载源码文件：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011507960.png\"></p>\n<p>下载解压后，在 <code>themes</code> 目录下创建一个 <code>fluid</code> 目录，将源码复制到该目录下，如下：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011509213.png\" alt=\"image.png\"></p>\n<h3 id=\"2-3-应用主题\"><a href=\"#2-3-应用主题\" class=\"headerlink\" title=\"2.3 应用主题\"></a>2.3 应用主题</h3><p>当你安装成功后，需要在 <code>_config.yml</code> 中将使用的主题设置为你下载好的主题，找到 <code>theme</code> 配置项，将其修改为：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Extensions  </span><br><span class=\"hljs-comment\">## Plugins: https://hexo.io/plugins/  </span><br><span class=\"hljs-comment\">## Themes: https://hexo.io/themes/  </span><br><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">fluid</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-4-配置第三方主题\"><a href=\"#2-4-配置第三方主题\" class=\"headerlink\" title=\"2.4 配置第三方主题\"></a>2.4 配置第三方主题</h3><p>如果你是以 npm 方式安装主题，你需要修改你刚才在博客目录下创建 <code>_config.fluid.yml</code> 文件修改相关配置；</p>\n<p>如果你是以源码方式安装的主题，就不需要创建 <code>_config.fluid.yml</code> 文件了，只需要修改 <code>/themes/fluid/_config.yml</code> 文件中的配置就可以了。</p>\n<blockquote>\n<p>注意：每个主题的配置文件名称都不一样，主题的配置项也不一样，具体需要自行查看你安装主题的说明文档</p>\n</blockquote>\n<h2 id=\"3-部署-Github-Pages\"><a href=\"#3-部署-Github-Pages\" class=\"headerlink\" title=\"3. 部署 Github Pages\"></a>3. 部署 Github Pages</h2><p>然后在 Github 中创建一个新项目仓库，名称必须为 <code>&lt;你的github用户名&gt;.github.io</code>，创建完成后按照指引将你的博客代码上传到 github。</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011512358.png\" alt=\"image.png\"></p>\n<h3 id=\"3-1-开启-Github-Pages\"><a href=\"#3-1-开启-Github-Pages\" class=\"headerlink\" title=\"3.1 开启 Github Pages\"></a>3.1 开启 Github Pages</h3><p>在执行这一步之前，先创建一个没有任何代码的新分支，命名为 <code>gh-pages</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs git\">git checkout -b gh-pages  <br>rm -f * # 确定你的当前目录没问题，把握不住删除指令的话就手动删除当前文件加的内容  <br>git push --set-upstream origin release # 上传 release 分支<br></code></pre></td></tr></table></figure>\n\n<p>在项目的设置中找到 Github Pages，并将展示分支设置为刚才创建的 <code>gh-pages</code> 分支：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011513779.png\" alt=\"image.png\"></p>\n<p>这就意为这你在 <code>gh-pages</code> 上传的任何 html 都可以使用 <code>&lt;你的github用户名&gt;.github.io</code> 这个域名来访问了。</p>\n<p>我们切回 <code>master</code> 分支，之后执行 <code>yarn build</code> 将生成的 <code>public</code> 目录下的文件复制一份，然后重新切回 <code>gh-pages</code> 分支，将刚才复制的内容粘贴到 <code>gh-pages</code> 分支下，并上传代码。如果没有操作失误的话，访问 <code>&lt;你的github用户名&gt;.github.io</code> 即可看到你的博客了。</p>\n<h3 id=\"3-2-Github-Action-自动部署\"><a href=\"#3-2-Github-Action-自动部署\" class=\"headerlink\" title=\"3.2 Github Action 自动部署\"></a>3.2 Github Action 自动部署</h3><p>使用 Github Action 来帮我们做自动化部署。</p>\n<p>Github Action 可以实现在一个行为触发之后再执行一些其他的行为，利用这个能力我们就可以实现当我们写完一篇文章后，将代码 Push 到 Github 仓库的这一刻，让 Github 来帮我们完成编译以及部署这个流程，也就是实现持续集成（CI）、持续交付（CD）的这个效果。</p>\n<p>关于 Github Action，详细教程可以查看 <a href=\"https://docs.github.com/cn/actions\">官方文档</a>。按照文档中所描述的，只要我们在代码中添加一层 <code>.github/workflows</code> 目录，并且在目录下创建一个 <code>yml</code> 文件来描述具体的行为，就可以实现开启 Github Action。</p>\n<p>如下是一个编写好的部署 hexo 博客的 yml 文件，你可以将其写入到 <code>.github/workflows/blog-deploy.yml</code> 文件中：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">GitHub</span> <span class=\"hljs-string\">Pages</span><br><br><span class=\"hljs-attr\">on:</span><br>  <span class=\"hljs-attr\">push:</span><br>    <span class=\"hljs-attr\">branches:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">main</span> <span class=\"hljs-comment\"># default branch</span><br><br><span class=\"hljs-attr\">jobs:</span><br>  <span class=\"hljs-attr\">pages:</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">permissions:</span><br>      <span class=\"hljs-attr\">contents:</span> <span class=\"hljs-string\">write</span><br><br><br>    <span class=\"hljs-attr\">steps:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v2</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span> <span class=\"hljs-number\">16.</span><span class=\"hljs-string\">x</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v2</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">&quot;16&quot;</span><br><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Cache</span> <span class=\"hljs-string\">NPM</span> <span class=\"hljs-string\">dependencies</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/cache@v2</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">node_modules</span><br>          <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">runner.OS</span> <span class=\"hljs-string\">&#125;&#125;-npm-cache</span><br>          <span class=\"hljs-attr\">restore-keys:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"hljs-string\"></span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">Dependencies</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span><br><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">peaceiris/actions-gh-pages@v3</span><br>        <span class=\"hljs-attr\">with:</span><br>          <span class=\"hljs-attr\">github_token:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">secrets.ACCESS_TOKEN</span> <span class=\"hljs-string\">&#125;&#125;</span><br>          <span class=\"hljs-attr\">publish_dir:</span> <span class=\"hljs-string\">./public</span><br></code></pre></td></tr></table></figure>\n\n<p>保存后提交代码后，就可以在你的博客的 Github 项目仓库里的 Actions 标签页里找到创建好的 workflow 了，并且当你 push 代码时，这个工作流就会被触发：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011517404.png\" alt=\"image.png\"></p>\n<p>但其实它最终会失败的，因为我们还有一步没有完成。在上面的脚本中使用了一个 Github Action 的 <a href=\"https://docs.github.com/cn/actions/learn-github-actions/contexts#secrets-context\">secrets 上下文</a>，即 <code>$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;</code> 这里。</p>\n<p><code>$&#123;&#123; xxx &#125;&#125;</code> 是 Github Action 中的特定模板语法，可以获取到一些 Github 相关的内置的系统变量（姑且这么说吧），但又区区别与 Github Action 的环境变量。我们这里获取的 <code>secrets.ACCESS_TOKEN</code> 是 Github Personal access token，获取这个 token 的目的是为了让当前的 Github Action 工作流有向我们的项目推送代码的权限。</p>\n<p>首先我们要获取这个 Token，你可以在你的用户头像菜单里选择 <code>Setting</code>，进入设置后选择 <code>Developer settings</code>，再选择 <code>Persona access token</code> 就可以看到它了：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518709.png\" alt=\"image.png\"></p>\n<p>点击右上角的 <code>Generate new token</code> 按钮生成新的 Token，填写一个你比较容易区分的备注后，勾选 <code>repo</code> 和 <code>workflow</code> 权限，并将 <code>Expiration</code> 过期时间选为 <code>No expiration</code>：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518481.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>这个 Token 相当重要，千万不能泄露，如过泄露立刻重置该 token ！！！</p>\n</blockquote>\n<p>点击 <code>Generate token</code> 按钮后，就会生成一个 <code>ghp</code> 开头的 token，你需要在此复制该 token（后面不能再查看了，只能重新生成）:</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011518736.png\" alt=\"image.png\"></p>\n<p>复制该 token 后，进入到博客仓库的设置中，选择 <code>Secrets - Actions</code>，点击 <code>New repository secret</code> 按钮生成一个密钥信息：</p>\n<p><img src=\"https://raw.githubusercontent.com/Yakumo-Sue/PicGo/main/images202308011519065.png\" alt=\"image.png\"></p>\n<p>我们将密钥名称写为 <code>ACCESS_TOKEN</code>，值填入刚才复制的 Github token。</p>\n<blockquote>\n<p>这里所新建的 secret 字段，就可以被 Github Action yml 配置中的 <code>secret</code> 上下文对象所获取到。</p>\n</blockquote>\n<p>至此 Github Action 工作流就可以正常使用了，你可以愉快的开始写你的博客啦，你的每次提交 Github Action 都会帮你进行自动部署。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clkrobmbf0001u0pkc6e72u5t","tag_id":"clkrx9my1000188pk03r77a6c","_id":"clkrx9my2000388pkeoylfiwh"},{"post_id":"clkrobmbf0001u0pkc6e72u5t","tag_id":"clkrx9osa000488pk90nigter","_id":"clkrx9osa000588pkdy0w46xg"},{"post_id":"clkrobmbf0001u0pkc6e72u5t","tag_id":"clkrx9my0000088pk9qa334re","_id":"clkrx9vjo000688pkblob304d"},{"post_id":"clkrobmbf0001u0pkc6e72u5t","tag_id":"clkrxabij000988pk2ejf91d2","_id":"clkrxabij000a88pkgz8vbqsd"},{"post_id":"clkrobmbf0001u0pkc6e72u5t","tag_id":"clkrxaf45000d88pk4evxcnph","_id":"clkrxaf45000e88pk7qs9aan9"}],"Tag":[{"name":"Hexo","_id":"clkrx9my0000088pk9qa334re"},{"name":"Fluid","_id":"clkrx9my1000188pk03r77a6c"},{"name":"Blog","_id":"clkrx9osa000488pk90nigter"},{"name":"Obdidi","_id":"clkrxa9vs000788pke2prhtx5"},{"name":"Obdidian","_id":"clkrxabij000988pk2ejf91d2"},{"name":"Github","_id":"clkrxade8000b88pk1q1k0kg3"},{"name":"Github Pages","_id":"clkrxaf45000d88pk4evxcnph"}]}}